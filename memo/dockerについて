■dockerってなに？

Dokcerはパソコン上でSwitchやLinuxを動かせるエミュレータのようなもの

Dokcerがあるとアプリケーションを簡単デプロイできる

Dockerがないと、、、
環境構築が大変
加えて、
ローカルでは動いたのにテスト環境や本番環境では動かない


Dokcerがあれば、、、
アプリケーションを動作させるのに必要なものをひとまとめにして配布できる
加えて、ローカルで開発したものをテスト環境や本番環境にそのまま入れるだけ

今の段階では、
Dockerを使えば環境構築が簡単って覚えておけばいいかな？
プラス、ローカル環境と本番環境での差分がなくなる


■基本的な仕組み
イメージとコンテナがDockerの基本

•Dockerイメージ
コンテナの元になるテンプレート

•Dockerコンテナ
dockerイメージをもとに作成される

下記イメージを持っておく
イメージからコンテナを立ち上げる


■Dockerの操作手順

1 イメージを取得/ビルドする


2 コンテナを生成、起動する


■コンテナを動かそう




■Dockerと他の仮想化ソフトウェアの違い
Dockerはコンテナ型仮想化
VirtualBoxはホストOS型仮想化

■イメージを作成しよう

$ docker image buil [オプション]PATH
$ docker image build .
.を指定(今いるディレクトリーにあるdockerfileを参照してイメージを作成する)
-t タブをつける
-f ファイルを指定(Dockerfile以外の名前の場合)

■コンテナ

-d コンテナをバックグラウンドで実行する

--name コンテナに名前をつける

-it 標準出力とターミナルをアタッチする
コンテナ上で最初に実行されるプロセスがシェルの場合、-itオプションをつけるとコンテナが終了しなくなる

docker container run -d --name bar paractice/apache:latest



■ポートを公開を使用

ブラウザから接続する（コンテナ上で動かしているapache）

コンテナを起動したため、apacheが動いている状態

ブラウザからリクエストをおくればwebページを見ることができる

・現状
アクセスできない状態


Dockeで外部からコンテナと通信するには
•コンテナのポートをホストに公開する
•ホストのポート番号8080へのリクエストとマッピングするように設定

↑どうやるか
docker container run コマンド実行前に -pオプションをつける
-p コンテナのポートをホストに公開する(publish)

docker container run -p 8080.80 myapache:latest

まとめ
•コンテナのネットワークは独立しており、外部に対して閉じている
一つの独立した仮想マシンとして振る舞えるようにしている

•外部からコンテナと通信するには、コンテナのポート番号をホストに対し
公開し、ホストへの特定ポート番号への通信をコンテナの公開したポート番号へマッピングする

•コンテナのポート番号を公開するにはdocker container run -pコマンドを使用する


docker container exec コマンドから
